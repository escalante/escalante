# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="1x_Duso0Q_eOLO;V;E1LUvuK>NBpVwF<n:xEXr:QhSmp/sGsFEPT2ly=0=Sd6Hxu"

# The application languages
# ~~~~~
application.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router 
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point. 
# Furthermore, it's assumed your route file is named properly. 
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

application.context="/helloworld"

# Database configuration
# ~~~~~ 
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.user=sa
# db.default.password=""

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# Due to the following two issues and current Play integration structure:
# - https://groups.google.com/forum/#!searchin/play-framework/TRACE$20logging/play-framework/zG1Kclj0fTM/Zl9bq9iePDYJ
# - https://github.com/playframework/Play20/issues/853
#
# The only possible way to configure logging is providing a logback (http://logback.qos.ch/)
# logger.xml file via -Dlogger.file=... system property. Any logging settings
# defined in application.conf will be ignored.
